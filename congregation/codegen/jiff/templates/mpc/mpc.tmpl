(function (exports, node) {

  let functions = require('./functions');
  let helpers = require('./helpers');
  let jiffInstance;
  exports.connect = function (hostname, computationId, options) {

    let opt = Object.assign({}, options);
    opt.crypto_provider = true;
    opt.warn = false;

    let jiffClient = require('{{{JIFF_PATH}}}/lib/jiff-client.js');
    opt.autoConnect = false;
    jiffInstance = new jiffClient(hostname, computationId, opt);

{{{BIG_NUMBER}}}{{{FIXED_POINT}}}{{{NEGATIVE_NUMBER}}}
    jiffInstance.connect();
    return jiffInstance;
  };

  exports.compute = function () {

    let all_inputs = [];
{{{SHARE_STR}}}
    let computation = Promise.all([inputs]).then( function (d) {
      {{{INPUTS_STR}}}
      {{{OP_CODE}}}
    })

    return computation.then(function (opened) {
      return opened;
    })

  };
}((typeof exports === 'undefined' ? this.mpc = {} : exports), typeof exports !== 'undefined'));
